# Generated by Django 5.2.1 on 2025-05-27 00:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_client', models.CharField(max_length=255)),
                ('adresse', models.TextField()),
                ('code_postal', models.CharField(max_length=10)),
                ('ville', models.CharField(max_length=100)),
                ('pays', models.CharField(default='France', max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('siret', models.CharField(blank=True, max_length=14, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_fournisseur', models.CharField(max_length=255)),
                ('adresse', models.TextField()),
                ('code_postal', models.CharField(max_length=10)),
                ('ville', models.CharField(max_length=100)),
                ('pays', models.CharField(default='France', max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('siret', models.CharField(max_length=14)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Statistique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('total_commandes', models.IntegerField(default=0)),
                ('total_clients', models.IntegerField(default=0)),
                ('total_fournisseurs', models.IntegerField(default=0)),
                ('total_produits', models.IntegerField(default=0)),
                ('ca_ht', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Taxe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('taux', models.DecimalField(decimal_places=2, max_digits=5)),
                ('code_comptable', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('gestionnaire', 'Gestionnaire de stock'), ('vendeur', 'Vendeur')], default='vendeur', max_length=20)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('LOGIN', 'Connexion'), ('LOGOUT', 'Déconnexion'), ('CREATE', 'Création'), ('UPDATE', 'Mise à jour'), ('DELETE', 'Suppression')], max_length=20)),
                ('details', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Log d'activité",
                'verbose_name_plural': "Logs d'activité",
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('VALIDEE', 'Validée'), ('EN_PREPARATION', 'En préparation'), ('LIVREE', 'Livrée'), ('ANNULEE', 'Annulée')], default='BROUILLON', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('remise_globale', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('date_echeance', models.DateField(blank=True, null=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='commandes', to='api.fournisseur')),
                ('tva', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.taxe')),
            ],
        ),
        migrations.CreateModel(
            name='Inventaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('complet', models.BooleanField(default=False)),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=50, unique=True)),
                ('designation', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('prix_achat', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('prix_vente', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantite_stock', models.IntegerField(default=0)),
                ('seuil_alerte', models.IntegerField(default=5)),
                ('unite_mesure', models.CharField(choices=[('unite', 'Unité'), ('kg', 'Kilogramme'), ('g', 'Gramme'), ('l', 'Litre'), ('m', 'Mètre')], default='unite', max_length=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('stock', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, upload_to='produits/')),
                ('code_barre', models.CharField(blank=True, max_length=50)),
                ('categorie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.categorie')),
                ('tva', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.taxe')),
            ],
        ),
        migrations.CreateModel(
            name='MouvementStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_mouvement', models.CharField(choices=[('entree', 'Entrée'), ('sortie', 'Sortie'), ('ajustement', 'Ajustement')], max_length=20)),
                ('quantite', models.IntegerField()),
                ('date_mouvement', models.DateTimeField(auto_now_add=True)),
                ('motif', models.TextField(blank=True, null=True)),
                ('commande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.commande')),
                ('fournisseur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.fournisseur')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mouvements', to='api.produit')),
            ],
        ),
        migrations.CreateModel(
            name='LigneInventaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_theorique', models.IntegerField()),
                ('quantite_reelle', models.IntegerField()),
                ('ecart', models.IntegerField(default=0)),
                ('inventaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.inventaire')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.produit')),
            ],
        ),
        migrations.CreateModel(
            name='LigneCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remise_ligne', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('date_livraison_prevue', models.DateField(blank=True, null=True)),
                ('statut_livraison', models.CharField(default='A_LIVRER', max_length=20)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='api.commande')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lignecommandes', to='api.produit')),
            ],
        ),
        migrations.CreateModel(
            name='Parametres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seuil_alerte_defaut', models.IntegerField(default=5)),
                ('logo', models.ImageField(blank=True, upload_to='logos/')),
                ('tva_par_defaut', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.taxe')),
            ],
        ),
        migrations.CreateModel(
            name='Vente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_vente', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('VALIDEE', 'Validée'), ('PAYEE', 'Payée'), ('ANNULEE', 'Annulée')], default='BROUILLON', max_length=20)),
                ('remise', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('numero_facture', models.CharField(blank=True, max_length=20, unique=True)),
                ('date_echeance', models.DateField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.client')),
                ('tva', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.taxe')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LigneVente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.produit')),
                ('vente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='api.vente')),
            ],
        ),
        migrations.AddConstraint(
            model_name='produit',
            constraint=models.UniqueConstraint(fields=('reference',), name='unique_reference'),
        ),
    ]
